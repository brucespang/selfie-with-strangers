"""empty message

Revision ID: aa49a4f73fc
Revises: 5899eb8e543a
Create Date: 2015-04-29 01:45:29.492191

"""

# revision identifiers, used by Alembic.
revision = 'aa49a4f73fc'
down_revision = '5899eb8e543a'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('available_users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('joined', sa.DateTime(), nullable=True),
    sa.Column('tile_id', sa.String(), nullable=True),
    sa.Column('tile_name', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('username')
    )
    op.create_table('tiles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('locations', sa.Column('lon', sa.Float(), nullable=False))
    op.drop_column('locations', 'long')

    op.add_column('proposals', sa.Column('delay', sa.SmallInteger(), nullable=False))
    op.add_column('proposals', sa.Column('tile', sa.String(), nullable=False))
    op.add_column('proposals', sa.Column('user1_accepted', sa.Boolean(), nullable=True))
    op.add_column('proposals', sa.Column('user1_id', sa.String(), nullable=False))
    op.add_column('proposals', sa.Column('user2_accpeted', sa.Boolean(), nullable=True))
    op.add_column('proposals', sa.Column('user2_id', sa.String(), nullable=False))

    op.drop_constraint(u'proposals_proposer_id_fkey', 'proposals', type_='foreignkey')
    op.drop_constraint(u'proposals_recipient_id_fkey', 'proposals', type_='foreignkey')
    op.drop_column('proposals', 'proposer_id')
    op.drop_column('proposals', 'recipient_id')
    op.drop_column('proposals', 'accepted')
    op.drop_column('proposals', 'meeting_time')
    op.drop_constraint(u'questions_question_key', 'questions', type_='unique')
    op.alter_column('users', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.create_unique_constraint(None, 'users', ['email'])
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.alter_column('users', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_unique_constraint(u'questions_question_key', 'questions', ['question'])
    op.add_column('proposals', sa.Column('meeting_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('proposals', sa.Column('accepted', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('proposals', sa.Column('recipient_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True))
    op.add_column('proposals', sa.Column('proposer_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True))
    op.create_foreign_key(u'proposals_recipient_id_fkey', 'proposals', 'users', ['recipient_id'], ['id'])
    op.create_foreign_key(u'proposals_proposer_id_fkey', 'proposals', 'users', ['proposer_id'], ['id'])

    op.drop_column('proposals', 'user2_id')
    op.drop_column('proposals', 'user2_accpeted')
    op.drop_column('proposals', 'user1_id')
    op.drop_column('proposals', 'user1_accepted')
    op.drop_column('proposals', 'tile')
    op.drop_column('proposals', 'delay')
    op.add_column('locations', sa.Column('long', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.drop_column('locations', 'lon')
    op.create_table('outcome_codes',
    sa.Column('outcomeid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('outcomeid', name=u'outcome_codes_pkey')
    )
    op.create_table('ratings',
    sa.Column('selfie_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('rater_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('ratee_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ratee_id'], [u'users.id'], name=u'ratings_ratee_id_fkey'),
    sa.ForeignKeyConstraint(['rater_id'], [u'users.id'], name=u'ratings_rater_id_fkey'),
    sa.ForeignKeyConstraint(['selfie_id'], [u'selfies.id'], name=u'ratings_selfie_id_fkey'),
    sa.PrimaryKeyConstraint('selfie_id', 'rater_id', 'ratee_id', name=u'ratings_pkey')
    )
    op.create_table('answers',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('selfie_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('question_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('answer', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['question_id'], [u'questions.id'], name=u'answers_question_id_fkey'),
    sa.ForeignKeyConstraint(['selfie_id'], [u'selfies.id'], name=u'answers_selfie_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'answers_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'answers_pkey')
    )
    op.create_table('feedback',
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('selfie_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('feedback', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['selfie_id'], [u'selfies.id'], name=u'feedback_selfie_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'feedback_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'selfie_id', name=u'feedback_pkey')
    )
    op.create_table('selfie_users',
    sa.Column('selfie_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'selfie_users_user_id_fkey'),
    sa.PrimaryKeyConstraint('selfie_id', 'user_id', name=u'selfie_users_pkey')
    )
    op.create_table('user_locations',
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('long', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'user_locations_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'created_at', name=u'user_locations_pkey')
    )
    op.create_table('selfies',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('outcome_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'selfies_pkey')
    )
    op.drop_table('tiles')
    op.drop_table('available_users')
    ### end Alembic commands ###
